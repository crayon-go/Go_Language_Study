package main

import "fmt"

// func average(xs []float64) float64 {
// 	total := 0.0
// 	for _, v := range xs {
// 		total += v
// 	}
// 	return total / float64(len(xs))
// }

// var x int = 5

// func f() {
// 	fmt.Println(x)
// }

// func f2() (r int) {
// 	r = 1
// 	return
// }

// func add(args ...int) int {
// 	total := 0
// 	for _, v := range args {
// 		total += v
// 	}
// 	return total
// }

// func makeEvenGenerator() func() uint {
// 	i := uint(0)
// 	return func() (ret uint) {
// 		ret = i
// 		i += 2
// 		return
// 	}
// }

// func factorial(x uint) uint {
// 	if x == 0 {
// 		return
// 	}
// 	return x * factorial(x-1)
// }

// func first() {
// 	fmt.Println("1st")
// }
// func second() {
// 	fmt.Println("2nd")
// }

func main() {

	// xs := []float64{98, 93, 77, 82, 83}
	// someOtherName := []float64{98, 93, 77, 82, 83}
	// fmt.Println(average(someOtherName))

	// fmt.Println(add(1, 2, 3))

	// xs := []int{1, 2, 3}
	// fmt.Println(add(xs...))

	// add := func(x, y int) int {
	// 	return x + y
	// }
	// fmt.Println(add(1, 1))

	// x := 0
	// increment := func() int {
	// 	x++
	// 	return x
	// }
	// fmt.Println(increment())
	// fmt.Println(increment())

	// nextEven := makeEvenGenerator()
	// fmt.Println(nextEven()) // 0
	// fmt.Println(nextEven()) // 2
	// fmt.Println(nextEven()) // 4

	// defer second()
	// first()

	defer func() {
		str := recover()
		fmt.Println(str)
	}()
	panic("PANIC")

}
